namespace EdmxSourceGenerator.Internal;

using System;
using System.Collections.Generic;
using System.Text;
using System.Xml.Linq;

internal class EnumType
{
    internal EnumType(string @namespace, string name, XElement element)
    {
        this.Namespace = @namespace;
        this.Name = name;
        var elem = (XElement)element.FirstNode;
        do
        {
            if (elem.Name.LocalName is "Member")
            {
                var memberName = elem.Attribute("Name").Value;
                var memberValue = Convert.ToInt32(elem.Attribute("Value").Value);
                this.Members.Add((memberName, memberValue));
            }

            elem = (XElement)elem.NextNode;
        }
        while (elem != null);
    }

    internal string Namespace { get; private set; }
    internal string Name { get; private set; }
    internal List<(string, int)> Members { get; private set; } = new();

    public override string ToString()
    {
        var result = new StringBuilder($@"// <auto-generated/>
namespace {this.Namespace};

public enum {this.Name} : int
{{
    ");
        foreach (var member in this.Members)
        {
            _ = this.Members.IndexOf(member) + 1 < this.Members.Count
                ? result.Append($@"{member.Item1} = {member.Item2},
    ")
                : result.Append($@"{member.Item1} = {member.Item2},
");
        }
        _ = result.Append(@"}
");
        return result.ToString();
    }
}
